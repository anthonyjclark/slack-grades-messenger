#!/usr/bin/env python3

import ssl
import slack
import csv
import sys

ssl_context = ssl.create_default_context()
ssl_context.check_hostname = False
ssl_context.verify_mode = ssl.CERT_NONE

if len(sys.argv) != 3:
    print("Usage: ./main.py grades.csv SLACK_API_TOKEN")
    raise SystemExit

csv_filename = sys.argv[1]
with open(csv_filename, mode='r') as csv_file:
    csv_reader = csv.DictReader(csv_file)

    # Use "Email" as the dictionary key
    students = {row["Email"].lower(): row for row in csv_reader}

# Convert to floats
float_keys = {"Percent", "Assignment", "Activity", "Quiz"}
for student in students:
    for key in students[student]:
        if key in float_keys:
            students[student][key] = float(students[student][key]) * 100

slack_token = sys.argv[2]
client = slack.WebClient(token=slack_token, ssl=ssl_context)

message_template = """Hello {Name}, here is your grade summary.
```
Current Grade: {Percent:.2f}% ({Letter} --> {Points})

         Breakdown
---------------------------
Assignment: {Assignment:.2f}% (not including contributions)
  Activity: {Activity:.2f}%
      Quiz: {Quiz:.2f}%
     Final: <not yet taken>
```
If this looks incorrect to you, please contact me ASAP!
"""

users = client.users_list()["members"]
users_not_found = []

for user in users:
    profile = user["profile"]
    if "email" in profile:
        email = profile["email"].lower()
        if email in students:
            student = students[email]
            print(f"Sending to: {user['real_name']} ({student['Name']})")

            msg = message_template.format(**student)
            client.chat_postMessage(channel=user['id'], text=msg, as_user=True)
        else:
            users_not_found.append(email)
    else:
        print("No email for:", profile["real_name"])

print("Finished sending messages to students.")

if len(users_not_found) is 0:
    print("Successfully mapped every slack account to an email in the CSV.")
else:
    print(
        "Unable to associate the following Slack emails with the emails in the CSV:"
    )
    for email in users_not_found:
        print("* ", email)
